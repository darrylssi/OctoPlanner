plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'se.thinkcode.cucumber-runner' version '0.0.8'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

group = 'nz.ac.canterbury.seng302'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

wrapper {
    gradleVersion = '7.4'
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    junitVersion = '5.7.2'
    cucumberVersion = '6.10.4'
}

test {
    finalizedBy jacocoTestReport
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.webjars:fullcalendar:5.10.2'



    implementation 'net.devh:grpc-client-spring-boot-starter:2.13.1.RELEASE' // GRPC client dependencies
    implementation 'nz.ac.canterbury.seng302:shared:1.0' // Local package containing .proto files

    implementation 'io.jsonwebtoken:jjwt-api:0.11.0'

    // H2 database
    implementation 'com.h2database:h2:2.1.210'
    // MariaDB Database
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.4'
    // Java Persistence API
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.4'

    // Cucumber dependencies
    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"

    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"


    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test:5.6.3'

}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--glue', 'com.accounting.cucumber',
                    'src/test/resources']
        }
    }
}

cucumber {
    main = 'io.cucumber.core.cli.Main'
}


tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

}

// Jacoco test coverage configuration
jacoco {
    toolVersion = "0.8.7"
}

// select what reports Jacoco generates and where to put them
jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/jacoco/test-report.xml")
        csv.enabled false
        html.destination file("${buildDir}/jacoco/html")
    }
}

// Sonarqube specific configuration (task)
sonarqube {
    properties {
        property "sonar.projectKey", "team-800-portfolio"
        property "sonar.projectName", "team 800 - portfolio"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.host.url", "https://sonarqube.csse.canterbury.ac.nz"
        property "sonar.login", "$System.env.Team800SonarqubeApiToken"
    }
}
